<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<sub-flow name="impl-get-artists" doc:id="e949be68-4efc-4570-af7d-fff00fb46ff7" >
		<logger level="INFO" doc:name="INFO START" doc:id="c0a32885-c77d-4d99-bb5c-ab3878d22138" message="#['impl-get-artists::START::payload:'  ++ write(payload, 'application/json')]"/>
		<flow-ref doc:name="sr-build-query-param-list" doc:id="4db7111a-6bf2-41f8-a605-462ddf40d3f6" name="sr-build-query-param-list" target="queryParamList"/>
		<flow-ref doc:name="sr-select-artists" doc:id="b7b5ef0e-aa19-47ef-8aa4-89d4b706629d" name="sr-select-artists"/>
	</sub-flow>
	<sub-flow name="sr-select-artists" doc:id="42e36de1-39e5-4be3-927b-33549f6fba69" >
		<logger level="INFO" doc:name="INFO START" doc:id="be9be208-cc69-4675-9ff2-e2be2c395693" message="#['sr-select-artists::START::payload: ' ++ write(payload,'application/json')]"/>
		<set-variable value="#[%dw 2.0
   output application/java
---
(&quot;1=1&quot; 
    ++ (if(vars.queryParamList.lastName != null) &quot; AND lower(LAST_NM) LIKE concat(lower(:lastName),'%')&quot; else &quot;&quot;)
    ++ (if(vars.queryParamList.firstName != null) &quot; AND lower(FIRST_NM) LIKE concat(lower(:firstName),'%')&quot; else &quot;&quot;)
    ++ (if(vars.queryParamList.groupName != null) &quot; AND lower(GROUP_NM) LIKE concat(lower(:groupName),'%')&quot; else &quot;&quot;)
    ++ (if(vars.queryParamList.dateOfBirth != null) &quot; AND BIRTH_DATE = :dateOfBirth&quot; else &quot;&quot;)
) as String]" doc:name="whereClause" doc:id="61d5cd1b-1a3b-49ae-993b-78cb86d08aff" variableName="whereClause"/>
		<db:select doc:name="SELECT artist" doc:id="4ad1a7cd-d8a6-460e-a347-cdad4496ca6b" config-ref="mysql-config">
			<db:sql>#[&quot;SELECT ARTIST_ID, GROUP_NM, FIRST_NM, LAST_NM, BIRTH_DATE, MI, DEATH_DATE 	
    FROM BC_ARTIST 
	  WHERE $(vars.whereClause)&quot;]

</db:sql>
			<db:input-parameters><![CDATA[#[vars.queryParamList]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="6200602b-c753-4fa8-8bf4-bb830596d518">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	statusCode: p('http.get.status.ok'),
	message: p('http.get.message.ok'),
	searchCriteria: ("[" 
		++ (if(vars.queryParamList.lastName != null) "lastName: '$(vars.queryParamList.lastName)', " else "")
++ (if(vars.queryParamList.firstName != null) "firstName: '$(vars.queryParamList.firstName)', " else "")
++ (if(vars.queryParamList.groupName != null) "groupName: '$(vars.queryParamList.groupName)', " else "")
++ (if(vars.queryParamList.dateOfBirth != null) "birthDate: '$(vars.queryParamList.dateOfBirth)', " else "")
    	++ "]"	),

	artists: payload map ( artist ) -> {
		artistId: artist.ARTIST_ID,
		groupName: artist.GROUP_NM default "",
		lastName: artist.LAST_NM default "",
		firstName: artist.FIRST_NM default "",
		mi: artist.MI default "",
		dateOfBirth: artist.BIRTH_DATE as String {format: "yyyy-MM-dd"} default "",
		(if (artist.DEATH_DATE != null) (dateOfDeath: artist.DEATH_DATE as String {format: "yyyy-MM-dd"}) else dateOfDeath: "")

	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="sr-build-query-param-list" doc:id="ccfcecf3-c69f-48aa-80b0-f4962fac6828" >
		<logger level="INFO" doc:name="INFO START" doc:id="f15bb7e5-9f69-4bad-9249-d05feccc610b" message="#['sr-build-query-param-list::START::payload: ' ++ write(payload,'application/json')]"/>
		<ee:transform doc:name="Transform Message" doc:id="8ae8e31f-c140-4210-a212-4b409a3dbe93" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
	firstName: attributes.queryParams.firstName,
	lastName: attributes.queryParams.lastName,
	dateOfBirth: attributes.queryParams.dateOfBirth,
	groupName: attributes.queryParams.groupName
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="INFO END payload" doc:id="de0bb517-55e4-4520-9bf0-dbd18a76cfc1" message="#['sr-build-query-param-list::END::payload: ' ++ write(payload,'application/json')]"/>
	</sub-flow>
	<sub-flow name="impl-add-artists" doc:id="ee4e10b8-2448-423c-867c-86990ffc31d0" >
		<logger level="INFO" doc:name="INFO START" doc:id="57e9ed80-045e-4d89-9c0a-63dd55f11715" message="#['impl-add-artists::START::sizeOfpayload:'  ++ sizeOf(payload.artists)]"/>
		<ee:transform doc:name="Transform Message" doc:id="7289bfca-d4c3-473a-842d-ab84ede1192c" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="artistsOut" ><![CDATA[%dw 2.0
output application/json
---
[]]]></ee:set-variable>
				<ee:set-variable variableName="artistsFound" ><![CDATA[%dw 2.0
output application/json
---
[]]]></ee:set-variable>
				<ee:set-variable variableName="artists" ><![CDATA[%dw 2.0
output application/json
---
payload.artists]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<foreach doc:name="For Each Artist" doc:id="3b67dc60-66cc-45b6-8cab-b77cae12ceb6" collection="#[vars.artists]">
			<logger level="INFO" doc:name="payload" doc:id="4622d24a-779b-4edb-afb8-31b2323eb8c7" message="#['impl-add-artists::ForEach::payload: ' ++ write(payload,'application/json')]"/>
			<set-payload value="#[output application/json
---
{
	artist: {
		artistId: payload.artistId,
		groupName: payload.groupName,
		lastName: payload.lastName,
		firstName: payload.firstName,
		mi: payload.mi,
		dateOfBirth: payload.dateOfBirth,
		dateOfDeath: payload.dateOfDeath
	}
}]" doc:name="artist" doc:id="f45ec2dc-c546-4756-904b-3da8ff7a0f3f" />
			<logger level="DEBUG" doc:name="artist" doc:id="7bb50bd7-c01e-4a0f-bcef-586850e2b072" message="#['impl-add-artists::ForEach::artist: ' ++ write(payload, 'application/json')]"/>
			<flow-ref doc:name="sr-insert-artist" doc:id="8f3c7a95-c522-47af-8df6-dd774b5686b9" name="sr-insert-artist" target="newArtist"/>
			<set-variable value="#[%dw 2.0
output application/java
---
vars.artistsOut + vars.newArtist]" doc:name="append artistsOut" doc:id="8649ca0a-c1ae-46b6-9b5c-a20f7a24f538" variableName="artistsOut"/>
		</foreach>
		<ee:transform doc:name="add response" doc:id="e41c35eb-8501-409a-a382-2c6311a7d97b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
    "statusCode": p('http.add.status.ok'),
    "message":    p('http.add.message.ok'),
    "artistsAdded": 
   		  vars.artistsOut,
	"duplicateArtists": 
  		  vars.artistsFound
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="sr-insert-artist" doc:id="00d97fd8-4637-4bfd-883b-d412c39625f8" >
		<logger level="INFO" doc:name="INFO START payload" doc:id="ff87be70-9b6f-4bdf-a642-c25c8aba1601" message="#['sr-insert-artist::START::artist: ' ++ write(payload,'application/json')]"/>
		<set-variable value="#[payload.artist]" doc:name="incomingArtist" doc:id="26a2e30c-0677-4d9e-bc2e-c5af6d2bb09c" variableName="incomingArtist"/>
		<db:insert doc:name="Insert Artist" doc:id="16a04592-f982-499c-9072-30c420dd7e97" config-ref="mysql-config">
			<db:sql >INSERT INTO BC_MUSIC_FACTORY.BC_ARTIST 
         (ARTIST_ID, GROUP_NM, FIRST_NM, LAST_NM, MI, BIRTH_DATE, DEATH_DATE, STATUS_CD) 
         VALUES (NULL, :groupName, :firstName, :lastName, :mi, :birthDate, :deathDate, 'XX')
</db:sql>
			<db:input-parameters ><![CDATA[#[{
    groupName: 	vars.incomingArtist.groupName,
    firstName: 	vars.incomingArtist.firstName,
    lastName: 	vars.incomingArtist.lastName,
    mi: 	  	vars.incomingArtist.mi,
    birthDate: 	vars.incomingArtist.dateOfBirth,
    deathDate: 	vars.incomingArtist.dateOfDeath
}]]]></db:input-parameters>
		</db:insert>
		<db:select doc:name="Select Insert" doc:id="6358483d-4ee8-4c85-b95f-d9b2508ad013" config-ref="mysql-config" target="newArtistId">
			<db:sql >SELECT MAX(artist_id) AS artist_id from BC_MUSIC_FACTORY.BC_ARTIST
    WHERE GROUP_NM = :groupName 
          AND BIRTH_DATE = :birthDate 
          AND FIRST_NM = :firstName
          AND LAST_NM = :lastName
</db:sql>
			<db:input-parameters ><![CDATA[#[{
    groupName: 	vars.incomingArtist.groupName,
    firstName: 	vars.incomingArtist.firstName,
    lastName: 	vars.incomingArtist.lastName,
    birthDate: 	vars.incomingArtist.dateOfBirth
}]]]></db:input-parameters>
		</db:select>
		<set-payload value="#[output application/java
var artist = vars.incomingArtist
var newArtistId = vars.newArtistId[0].artist_id default 0
---
{
	artistId: 	newArtistId,
	groupName: 	artist.groupName,
	lastName: 	artist.lastName,
	firstName: 	artist.firstName,
	mi:       	artist.mi,
	dateOfBirth: 	artist.dateOfBirth,
	dateOfDeath:	artist.dateOfDeath
}]" doc:name="Update Payload" doc:id="e3f0c6a9-a265-4e59-8e36-0186a16e625b" />
		<logger level="INFO" doc:name="INFO END payload" doc:id="a491c4b1-ad85-48f4-9f54-6fd5aedf6373" message="#['sr-insert-artist::END:payload: ' ++ write(payload,'application/json')]"/>
	</sub-flow>
	<sub-flow name="impl-update-artist-urls" doc:id="d3f73044-c385-43dc-a38b-99b0d3c008be" >
		<logger level="INFO" doc:name="INFO START" doc:id="66d15932-67a7-4fa1-a35c-521e9b145752" message="#['impl-update-artist-urls::START::payload:'  ++ write(payload, 'application/json')]"/>
	</sub-flow>
</mule>
